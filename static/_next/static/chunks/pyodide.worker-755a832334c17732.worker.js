!function(){"use strict";let e;let t=Symbol("Comlink.proxy"),n=Symbol("Comlink.endpoint"),r=Symbol("Comlink.releaseProxy"),a=Symbol("Comlink.finalizer"),i=Symbol("Comlink.thrown"),s=e=>"object"==typeof e&&null!==e||"function"==typeof e,o=new Map([["proxy",{canHandle:e=>s(e)&&e[t],serialize(e){let{port1:t,port2:n}=new MessageChannel;return l(e,t),[n,[n]]},deserialize:e=>(e.start(),function(e,t){let a=new Map;return e.addEventListener("message",function(e){let{data:t}=e;if(!t||!t.id)return;let n=a.get(t.id);if(n)try{n(t)}finally{a.delete(t.id)}}),function e(t,a,i=[],s=function(){}){let o=!1,l=new Proxy(s,{get(n,s){if(u(o),s===r)return()=>{d&&d.unregister(l),p(t),a.clear(),o=!0};if("then"===s){if(0===i.length)return{then:()=>l};let e=E(t,a,{type:"GET",path:i.map(e=>e.toString())}).then(h);return e.then.bind(e)}return e(t,a,[...i,s])},set(e,n,r){u(o);let[s,l]=m(r);return E(t,a,{type:"SET",path:[...i,n].map(e=>e.toString()),value:s},l).then(h)},apply(r,s,l){u(o);let c=i[i.length-1];if(c===n)return E(t,a,{type:"ENDPOINT"}).then(h);if("bind"===c)return e(t,a,i.slice(0,-1));let[p,f]=g(l);return E(t,a,{type:"APPLY",path:i.map(e=>e.toString()),argumentList:p},f).then(h)},construct(e,n){u(o);let[r,s]=g(n);return E(t,a,{type:"CONSTRUCT",path:i.map(e=>e.toString()),argumentList:r},s).then(h)}});return function(e,t){let n=(f.get(t)||0)+1;f.set(t,n),d&&d.register(e,t,e)}(l,t),l}(e,a,[],void 0)}(e))}],["throw",{canHandle:e=>s(e)&&i in e,serialize:({value:e})=>[e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[]],deserialize(e){if(e.isError)throw Object.assign(Error(e.value.message),e.value);throw e.value}}]]);function l(e,n=globalThis,r=["*"]){n.addEventListener("message",function s(o){let u;if(!o||!o.data)return;if(!function(e,t){for(let n of e)if(t===n||"*"===n||n instanceof RegExp&&n.test(t))return!0;return!1}(r,o.origin)){console.warn(`Invalid origin '${o.origin}' for comlink proxy`);return}let{id:p,type:f,path:d}=Object.assign({path:[]},o.data),g=(o.data.argumentList||[]).map(h);try{var E,b;let n=d.slice(0,-1).reduce((e,t)=>e[t],e),r=d.reduce((e,t)=>e[t],e);switch(f){case"GET":u=r;break;case"SET":n[d.slice(-1)[0]]=h(o.data.value),u=!0;break;case"APPLY":u=r.apply(n,g);break;case"CONSTRUCT":E=new r(...g),u=Object.assign(E,{[t]:!0});break;case"ENDPOINT":{let{port1:t,port2:n}=new MessageChannel;l(e,n),b=[t],y.set(t,b),u=t}break;case"RELEASE":u=void 0;break;default:return}}catch(e){u={value:e,[i]:0}}Promise.resolve(u).catch(e=>({value:e,[i]:0})).then(t=>{let[r,i]=m(t);n.postMessage(Object.assign(Object.assign({},r),{id:p}),i),"RELEASE"===f&&(n.removeEventListener("message",s),c(n),a in e&&"function"==typeof e[a]&&e[a]())}).catch(e=>{let[t,r]=m({value:TypeError("Unserializable return value"),[i]:0});n.postMessage(Object.assign(Object.assign({},t),{id:p}),r)})}),n.start&&n.start()}function c(e){"MessagePort"===e.constructor.name&&e.close()}function u(e){if(e)throw Error("Proxy has been released and is not useable")}function p(e){return E(e,new Map,{type:"RELEASE"}).then(()=>{c(e)})}let f=new WeakMap,d="FinalizationRegistry"in globalThis&&new FinalizationRegistry(e=>{let t=(f.get(e)||0)-1;f.set(e,t),0===t&&p(e)});function g(e){var t;let n=e.map(m);return[n.map(e=>e[0]),(t=n.map(e=>e[1]),Array.prototype.concat.apply([],t))]}let y=new WeakMap;function m(e){for(let[t,n]of o)if(n.canHandle(e)){let[r,a]=n.serialize(e);return[{type:"HANDLER",name:t,value:r},a]}return[{type:"RAW",value:e},y.get(e)||[]]}function h(e){switch(e.type){case"HANDLER":return o.get(e.name).deserialize(e.value);case"RAW":return e.value}}function E(e,t,n,r){return new Promise(a=>{let i=[,,,,].fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");t.set(i,a),e.start&&e.start(),e.postMessage(Object.assign({id:i},n),r)})}!async function(e){await importScripts("/pyodide/pyodide/pyodide.js"),e(await loadPyodide())}(t=>{e=t}),l({async runPythonScript(t){let n=await new Promise((t,n)=>{let r=()=>{void 0!==e?(e.setStdout({batched:e=>{}}),t(e)):setTimeout(r,100)};r()}),r="";return n.setStdout({batched:e=>r+=e+"\n"}),await n.runPythonAsync(t),r}})}();